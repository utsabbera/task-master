basePath: /
definitions:
  api.PromptInput:
    properties:
      text:
        type: string
    type: object
  api.PromptResponse:
    properties:
      response:
        type: string
    type: object
  api.Task:
    properties:
      createdAt:
        type: string
      description:
        type: string
      dueDate:
        type: string
      id:
        type: string
      priority:
        $ref: '#/definitions/core.Priority'
      status:
        $ref: '#/definitions/core.Status'
      title:
        type: string
      updatedAt:
        type: string
    type: object
  api.TaskInput:
    properties:
      description:
        type: string
      dueDate:
        type: string
      priority:
        $ref: '#/definitions/core.Priority'
      title:
        type: string
    type: object
  core.Priority:
    enum:
    - 1
    - 2
    - 3
    type: integer
    x-enum-varnames:
    - PriorityLow
    - PriorityMedium
    - PriorityHigh
  core.Status:
    enum:
    - NOT_STARTED
    - IN_PROGRESS
    - COMPLETED
    type: string
    x-enum-varnames:
    - StatusNotStarted
    - StatusInProgress
    - StatusCompleted
host: localhost:8080
info:
  contact: {}
  description: API for managing tasks
  title: Task Master
  version: "1.0"
paths:
  /prompts:
    post:
      consumes:
      - application/json
      description: Process a natural language prompt for task management
      parameters:
      - description: Prompt input
        in: body
        name: prompt
        required: true
        schema:
          $ref: '#/definitions/api.PromptInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.PromptResponse'
      summary: Process Task Prompt
      tags:
      - prompts
  /tasks:
    get:
      description: List all tasks
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.Task'
            type: array
      summary: List Tasks
      tags:
      - tasks
    post:
      consumes:
      - application/json
      description: Create a new task
      parameters:
      - description: Task input
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/api.TaskInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.Task'
      summary: Create Task
      tags:
      - tasks
  /tasks/{id}:
    delete:
      description: Delete a task by ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: Task deleted
          schema:
            type: string
        "404":
          description: Task not found
          schema:
            type: string
      summary: Delete Task
      tags:
      - tasks
    get:
      description: Get a task by ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Task'
        "404":
          description: Task not found
          schema:
            type: string
      summary: Get Task
      tags:
      - tasks
    put:
      consumes:
      - application/json
      description: Update a task by ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      - description: Task input
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/api.TaskInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Task'
        "404":
          description: Task not found
          schema:
            type: string
      summary: Update Task
      tags:
      - tasks
swagger: "2.0"
